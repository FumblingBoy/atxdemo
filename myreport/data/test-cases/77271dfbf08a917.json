{
  "uid" : "77271dfbf08a917",
  "name" : "test_home.TestHome.test_home_guesslike",
  "fullName" : "testcase.test_home.TestHome.test_home_guesslike",
  "historyId" : "f9578f93a985c036800afaca57e6e257",
  "time" : {
    "start" : 1544454198052,
    "stop" : 1544454224569,
    "duration" : 26517
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "AssertionError: ",
  "statusTrace" : "self = <testcase.test_home.TestHome instance at 0x1116a1998>, init = <module.home.Home instance at 0x1116eb4d0>\n\n    @allure.story('测试推荐')\n    @pytest.mark.P1\n    def test_home_guesslike(self,init):\n>       init.home_guesslike()\n\ntestcase/test_home.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodule/home.py:62: in home_guesslike\n    self.base.assert_exited(guesslike)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module.base.Base instance at 0x1116f3998>, element = '\\xe6\\x8e\\xa8\\xe8\\x8d\\x90'\n\n    def assert_exited(self, element):\n        '''\n            断言当前页面存在要查找的元素,存在则判断成功\n            :param driver:\n            :return:\n            '''\n        if self.find_elements(element):\n            logger.info(\"断言{}元素存在,成功!\".format(element))\n            assert True\n        else:\n            logger.info(\"断言{}元素存在,失败!\".format(element))\n>           assert False\nE           AssertionError\n\nmodule/base.py:174: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: ",
    "statusTrace" : "self = <testcase.test_home.TestHome instance at 0x1116a1998>, init = <module.home.Home instance at 0x1116eb4d0>\n\n    @allure.story('测试推荐')\n    @pytest.mark.P1\n    def test_home_guesslike(self,init):\n>       init.home_guesslike()\n\ntestcase/test_home.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodule/home.py:62: in home_guesslike\n    self.base.assert_exited(guesslike)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module.base.Base instance at 0x1116f3998>, element = '\\xe6\\x8e\\xa8\\xe8\\x8d\\x90'\n\n    def assert_exited(self, element):\n        '''\n            断言当前页面存在要查找的元素,存在则判断成功\n            :param driver:\n            :return:\n            '''\n        if self.find_elements(element):\n            logger.info(\"断言{}元素存在,成功!\".format(element))\n            assert True\n        else:\n            logger.info(\"断言{}元素存在,失败!\".format(element))\n>           assert False\nE           AssertionError\n\nmodule/base.py:174: AssertionError",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1544454225410,
        "stop" : 1544454225410,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "6865901be8f94bd1",
        "name" : "失败截图",
        "source" : "6865901be8f94bd1.jpg",
        "type" : "image/jpg",
        "size" : 849878
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "c3716c9cc21208ec",
      "name" : "Captured log setup",
      "source" : "c3716c9cc21208ec.txt",
      "type" : "text/plain",
      "size" : 596
    }, {
      "uid" : "129da571433754b8",
      "name" : "Captured stderr call",
      "source" : "129da571433754b8.txt",
      "type" : "text/plain",
      "size" : 273
    }, {
      "uid" : "ec5a896994abc295",
      "name" : "Captured stderr setup",
      "source" : "ec5a896994abc295.txt",
      "type" : "text/plain",
      "size" : 417
    }, {
      "uid" : "2c49fe50662052e2",
      "name" : "Captured log call",
      "source" : "2c49fe50662052e2.txt",
      "type" : "text/plain",
      "size" : 602
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试首页"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "xinxideMacBook-Pro.local"
  }, {
    "name" : "language",
    "value" : "cpython2"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "测试推荐"
  }, {
    "name" : "thread",
    "value" : "29543-MainThread"
  }, {
    "name" : "suite",
    "value" : "testcase"
  }, {
    "name" : "testClass",
    "value" : "testcase"
  }, {
    "name" : "testMethod",
    "value" : "test_home.TestHome.test_home_guesslike"
  }, {
    "name" : "package",
    "value" : "testcase"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "77271dfbf08a917.json",
  "parameterValues" : [ ]
}